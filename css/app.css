body {
     overscroll-behavior-y: contain;
     /* iOS Safari */
     -webkit-touch-callout: none;
     /* Safari */
     -webkit-user-select: none;
     /* Konqueror HTML */
     -khtml-user-select: none;
     /* Old versions of Firefox */
     -moz-user-select: none;
     /* Internet Explorer/Edge */
     -ms-user-select: none;
     /* Non-prefixed version */
     user-select: none;
}

.blob {
     width: 10rem;
     aspect-ratio: 1/1;
     background-color: var(--fill);
     --edge-size: min(5rem, 10vw);
     box-shadow: 0px 0px 0px var(--edge-size) var(--edge-1), 0px 0px 0px calc(var(--edge-size) * 2) var(--edge-2);
     animation: morph 10s linear infinite, rotate 30s linear infinite;
     display: inline-block;
     transform-origin: 0% 0%;
}

.blob.purple-blue-yellow {
     --fill: var(--yellow);
     --edge-1: var(--blue);
     --edge-2: var(--purple);
}

@keyframes morph {

     0%,
     100% {
          border-radius: 33% 67% 70% 30% / 30% 30% 70% 70%;
     }

     20% {
          border-radius: 37% 63% 51% 49% / 37% 65% 35% 63%;
     }

     40% {
          border-radius: 36% 64% 64% 36% / 64% 48% 52% 36%;
     }

     60% {
          border-radius: 37% 63% 51% 49% / 30% 30% 70% 70%;
     }

     80% {
          border-radius: 40% 60% 42% 58% / 41% 51% 49% 59%;
     }
}

@keyframes rotate {
     0% {
          transform: rotate(0deg) translate(-50%, -50%)
     }

     100% {
          transform: rotate(360deg) translate(-50%, -50%)
     }
}



/* TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS */
/* TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS */
/* TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS // TESTS */

/* path generation code (https://passionhacks.com/blob-maker/?n=1&e=20&gw=6&se=41644&c=00cec9&o=0):

     let output = `:root {\n`
     for (let i=0; i<=10; i++){
          document.querySelectorAll('.chakra-button')[1].click()
          output += `    --path-${i}: path('${document.querySelector('.blob').getAttribute('d')}');\n`;
     }
     output += `}`

*/

:root {
     --path-0: path('M449.5,285.5Q469,321,421,330.5Q373,340,357.5,358.5Q342,377,331,420.5Q320,464,285,469Q250,474,217.5,462.5Q185,451,157,433.5Q129,416,112.5,389Q96,362,94.5,331.5Q93,301,59.5,275.5Q26,250,30.5,215Q35,180,78,168.5Q121,157,116,108Q111,59,149,57.5Q187,56,218.5,52Q250,48,279.5,59Q309,70,335.5,82.5Q362,95,403.5,102Q445,109,427.5,153.5Q410,198,420,224Q430,250,449.5,285.5Z');
     --path-1: path('M459.5,279Q430,308,417.5,335.5Q405,363,394.5,398.5Q384,434,345,428.5Q306,423,278,422.5Q250,422,212.5,451Q175,480,164.5,431Q154,382,139,361.5Q124,341,83,329.5Q42,318,34.5,284Q27,250,48.5,220.5Q70,191,92.5,171.5Q115,152,128,126.5Q141,101,167.5,89Q194,77,222,55Q250,33,286.5,29.5Q323,26,354,45Q385,64,399,98Q413,132,444,154.5Q475,177,482,213.5Q489,250,459.5,279Z');
     --path-2: path('M455,288Q485,326,430.5,334Q376,342,377.5,385Q379,428,352.5,456.5Q326,485,288,445.5Q250,406,214.5,437.5Q179,469,168.5,423Q158,377,118,376Q78,375,62.5,345.5Q47,316,35,283Q23,250,45.5,220.5Q68,191,91.5,171.5Q115,152,129.5,128Q144,104,164.5,77Q185,50,217.5,66Q250,82,285.5,57Q321,32,352.5,49Q384,66,418,84.5Q452,103,459,141.5Q466,180,445.5,215Q425,250,455,288Z');
     --path-3: path('M406.5,274Q397,298,423,346.5Q449,395,420,419.5Q391,444,349.5,436Q308,428,279,427.5Q250,427,214,450Q178,473,165.5,428.5Q153,384,105,387Q57,390,46,355Q35,320,61.5,285Q88,250,92,225Q96,200,92,166Q88,132,109,108.5Q130,85,158.5,71Q187,57,218.5,47.5Q250,38,278.5,55.5Q307,73,341,75.5Q375,78,387,110Q399,142,408.5,168.5Q418,195,417,222.5Q416,250,406.5,274Z');
     --path-4: path('M427.5,281.5Q443,313,432,343.5Q421,374,403,405Q385,436,356,461.5Q327,487,288.5,479Q250,471,221,449Q192,427,155.5,428.5Q119,430,93.5,406Q68,382,57,349Q46,316,28.5,283Q11,250,33,218.5Q55,187,54.5,147Q54,107,99,105.5Q144,104,172,100.5Q200,97,225,86Q250,75,288,46Q326,17,334,70Q342,123,385.5,121.5Q429,120,415.5,160.5Q402,201,407,225.5Q412,250,427.5,281.5Z');
     --path-5: path('M455.5,278.5Q424,307,418,337.5Q412,368,399,402.5Q386,437,347.5,435Q309,433,279.5,452Q250,471,221,449.5Q192,428,159.5,423.5Q127,419,125,380.5Q123,342,88.5,328Q54,314,67,282Q80,250,90,225.5Q100,201,112,179.5Q124,158,123,115.5Q122,73,158,76Q194,79,222,86Q250,93,283.5,68Q317,43,350,55Q383,67,397,100Q411,133,414.5,164Q418,195,452.5,222.5Q487,250,455.5,278.5Z');
     --path-6: path('M447.5,287Q478,324,462,358Q446,392,411.5,408.5Q377,425,349,447.5Q321,470,285.5,474.5Q250,479,212,482Q174,485,147.5,456.5Q121,428,98,402.5Q75,377,79.5,340.5Q84,304,90.5,277Q97,250,90.5,223Q84,196,80,159.5Q76,123,90.5,86.5Q105,50,140.5,35.5Q176,21,213,11.5Q250,2,287,12Q324,22,338.5,65Q353,108,381.5,121Q410,134,447.5,154Q485,174,451,212Q417,250,447.5,287Z');
     --path-7: path('M469.5,288.5Q486,327,443,343Q400,359,398,405Q396,451,350.5,435Q305,419,277.5,440.5Q250,462,213,470.5Q176,479,146.5,456Q117,433,86.5,412Q56,391,52.5,353Q49,315,69,282.5Q89,250,84.5,222.5Q80,195,74,156.5Q68,118,86.5,84.5Q105,51,153,75Q201,99,225.5,76Q250,53,278,65Q306,77,331,90.5Q356,104,390.5,113.5Q425,123,425,158Q425,193,439,221.5Q453,250,469.5,288.5Z');
     --path-8: path('M467,283.5Q458,317,444,348.5Q430,380,396.5,392.5Q363,405,330,399.5Q297,394,273.5,401Q250,408,216,433.5Q182,459,147.5,448.5Q113,438,107,398Q101,358,99.5,328.5Q98,299,94.5,274.5Q91,250,74.5,219Q58,188,83.5,168Q109,148,131,132Q153,116,165.5,72.5Q178,29,214,37Q250,45,278.5,59.5Q307,74,352,61Q397,48,406.5,88.5Q416,129,430.5,158Q445,187,460.5,218.5Q476,250,467,283.5Z');
     --path-9: path('M465.5,281Q442,312,414,330.5Q386,349,368.5,368.5Q351,388,334.5,423Q318,458,284,436.5Q250,415,225.5,407.5Q201,400,176.5,392Q152,384,116,379Q80,374,73,342Q66,310,75.5,280Q85,250,91,225Q97,200,109.5,178.5Q122,157,133.5,131Q145,105,171.5,97Q198,89,224,58.5Q250,28,277.5,55Q305,82,349,67.5Q393,53,414.5,84Q436,115,424,156Q412,197,450.5,223.5Q489,250,465.5,281Z');
     --path-10: path('M433.5,281Q441,312,414.5,331.5Q388,351,386.5,393.5Q385,436,343,421.5Q301,407,275.5,420.5Q250,434,217,444Q184,454,168.5,419Q153,384,110,383.5Q67,383,52.5,351Q38,319,65,284.5Q92,250,77.5,219.5Q63,189,58,148Q53,107,102.5,111.5Q152,116,172,94Q192,72,221,71.5Q250,71,274.5,84.5Q299,98,318.5,113Q338,128,383,124.5Q428,121,413.5,161.5Q399,202,412.5,226Q426,250,433.5,281Z');
 }

path {
     animation: 50s dev infinite;
     animation-timing-function: cubic-bezier(0.5, 0, 0.50, 1);
     transform-origin: 50% 50%;
     outline: 10px solid rgba(0 255 0 / .1);
}

path:nth-child(2) { transform: scale(.9) }
path:nth-child(3) { transform: scale(.8) }

@keyframes dev {
       0% {d: var(--path-0)}
      10% {d: var(--path-1)}
      20% {d: var(--path-2)}
      30% {d: var(--path-3)}
      40% {d: var(--path-4)}
      50% {d: var(--path-5)}
      60% {d: var(--path-6)}
      70% {d: var(--path-7)}
      80% {d: var(--path-8)}
      90% {d: var(--path-9)}
     100% {d: var(--path-0)}
}